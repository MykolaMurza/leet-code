import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        long start1 = System.currentTimeMillis();
        int[] arr1 = new int[]{119, 146, 129, 129, 182, 206, 115, 79, 99, 28, 42, 85, 120, 73, 234, 165, 79, 202, 114, 28, 242, 147, 165, 104, 215, 243, 107, 18, 84, 66, 174, 165, 213, 226, 160, 71, 249, 119, 202, 24, 113, 169, 47, 232, 178, 104, 86, 114, 205, 165, 60, 91, 175, 17, 240, 184, 63, 155, 23, 79, 20, 5, 140, 12, 189, 243, 55, 235, 120, 174, 151, 159, 222, 11, 192, 83, 116, 33, 246, 237, 168, 56, 122, 184, 63, 103, 172, 119, 65, 101, 61, 147, 69, 146, 219, 84, 47, 1, 73, 5, 31, 134, 231, 245, 126, 157, 19, 11, 119, 232, 225, 139, 64, 52, 65, 69, 142, 233, 84, 157, 46, 15, 212, 149, 10, 79, 126, 237, 116, 67, 63, 170, 147, 140, 170, 34, 132, 81, 51, 159, 82, 150, 44, 111, 244, 229, 135, 115, 207, 162, 145, 136, 203, 16, 184, 132, 227, 158, 27, 197, 53, 125, 221, 98, 127, 67, 94, 228, 5, 38, 167, 132, 112, 206, 136, 156, 247, 67, 137, 96, 107, 37, 187, 66, 176, 226, 200, 157, 142, 214, 238, 240, 169, 53, 112, 114, 90, 195, 116, 84, 137, 125, 204, 75, 134, 92, 167, 136, 140, 191, 222, 5, 17, 80, 72, 51, 211, 221, 158, 112, 128, 171, 131, 104, 169, 140, 58, 30, 153, 159, 134, 243, 230, 36, 53, 217, 220, 157, 120, 10, 238, 61, 126, 197, 231, 226, 200, 230, 103, 207, 242, 122, 112, 213, 234, 132, 144, 185, 54, 156, 223, 216, 204, 246, 14, 80, 143, 130, 68, 143, 65, 4, 164, 237, 28, 96, 83, 12, 190, 114, 233, 32, 160, 195, 243, 203, 152, 73, 248, 233, 169, 150, 74, 208, 191, 75, 101, 66, 83, 26, 169, 125, 128, 62, 15, 90, 190, 74, 183, 224, 147, 198, 139, 31, 184, 227, 208, 181, 185, 150, 207, 90, 249, 124, 223, 58, 15, 102, 225, 207, 161, 115, 166, 142, 198, 7, 26, 244, 179, 126, 128, 119, 6, 164, 94, 245, 155, 186, 54, 26, 243, 2, 63, 33, 91, 36, 88, 181, 179, 213, 103, 156, 213, 152, 12, 110, 74, 201, 11, 161, 101, 72, 40, 121, 164, 143, 143, 218, 160, 36, 178, 224, 131, 37, 20, 238, 127, 125, 211, 65, 183, 105, 231, 240, 212, 153, 106, 169, 55, 172, 250, 100, 217, 227, 97, 198, 105, 235, 250, 184, 34, 187, 220, 151, 233, 25, 205, 12, 152, 245, 53, 45, 121, 181, 33, 22, 17, 80, 113, 229, 221, 165, 13, 15, 59, 212, 40, 177, 157, 169, 30, 170, 204, 190, 40, 171, 206, 227, 72, 98, 54, 164, 219, 92, 180, 105, 122, 140, 134, 234, 92, 175, 182, 159, 71, 218, 137, 34, 79, 72, 19, 45, 33, 17, 15, 103, 135, 231, 4, 2, 123, 161, 157, 211, 77, 189, 141, 221, 141, 66, 34, 121, 163, 235, 136, 241, 1, 53, 83, 19, 66, 156, 227, 236, 36, 213, 226, 190, 75, 47, 127, 153, 17, 122, 84, 167, 243, 181, 2, 245, 126, 16, 60, 109, 111, 170, 234, 153, 232, 96, 158, 181, 243, 149, 31, 129, 156, 24, 76, 70, 202, 245, 65, 44, 249, 56, 98, 58, 182, 7, 76, 192, 54, 227, 179, 112, 32, 144, 232, 178, 8, 85, 236, 64, 81, 225, 123, 112, 31, 76, 11, 42, 86, 149, 13, 182, 229, 238, 95, 5, 241, 35, 49, 132, 24, 224, 238, 228, 247, 244, 226, 22, 242, 232, 133, 100, 164, 225, 155, 132, 138, 71, 235, 97, 142, 168, 185, 160, 192, 184, 25, 96, 113, 91, 56, 225, 136, 29, 229, 9, 127, 26, 127, 2, 220, 120, 3, 133, 230, 80, 41, 128, 177, 176, 74, 119, 78, 78, 37, 155, 60, 186, 13, 116, 233, 140, 76, 167, 221, 23, 36, 143, 107, 106, 64, 25, 167, 214, 16, 203, 166, 74, 130, 200, 224, 246, 141, 115, 219, 156, 176, 150, 140, 148, 49, 17, 240, 233, 211, 98, 147, 110, 98, 179, 112, 35, 122, 245, 33, 155, 89, 14, 146, 156, 222, 11, 111, 99, 88, 83, 238, 190, 113, 14, 181, 247, 216, 216, 83, 209, 225, 31, 56, 163, 91, 195, 182, 210, 62, 56, 157, 10, 115, 38, 130, 185, 97, 151, 8, 117, 80, 77, 185, 225, 65, 181, 76, 192, 222, 152, 51, 65, 81, 93, 81, 137, 147, 233, 5, 126, 51, 173, 92, 103, 187, 239, 64, 72, 205, 2, 88, 134, 170, 39, 149, 125, 205, 155, 245, 123, 226, 52, 28, 131, 222, 18, 164, 22, 24, 209, 209, 22, 132, 132, 203, 187, 17, 168, 194, 48, 168, 23, 92, 179, 195, 104, 228, 230, 47, 205, 23, 101, 240, 140, 68, 149, 110, 189, 17, 147, 186, 46, 217, 130, 154, 244, 222, 54, 214, 98, 3, 68, 68, 217, 150, 17, 38, 41, 207, 194, 140, 10, 79, 44, 106, 109, 30, 102, 14, 127, 170, 170, 143, 189, 56, 96, 160, 10, 113, 83, 184, 130, 47, 32, 35, 151, 176, 192, 65, 206, 110, 60, 114, 158, 61, 120, 144, 59, 32, 172, 161, 44, 238, 149, 192, 195, 11, 38, 208, 12, 34, 240, 237, 68, 154, 2, 116, 162, 106, 232, 63, 155, 67, 52, 18, 38, 227, 105, 101, 244, 12, 45, 71, 205, 54, 57, 11, 18, 66, 37, 237, 39, 72, 45, 155, 16, 191, 225, 84, 91, 218, 62, 39, 4, 63, 33, 57, 42, 53, 139, 15, 124, 227, 53, 100, 159, 132, 156, 42, 71, 138, 132, 230, 126, 54, 69, 193, 231, 237, 56, 70, 127, 99, 81, 157, 62, 12, 12, 135, 188, 179, 169, 4, 36, 15, 118, 189, 8, 98, 244, 200, 33, 44, 168, 247, 84, 81, 8, 181, 164, 75, 137, 150, 36, 169, 100, 12, 115, 3, 222, 239, 168, 83, 188, 60, 210, 238, 217, 117, 64};
        sort(arr1, new int[arr1.length], 0, arr1.length - 1);
        System.out.println(Arrays.toString(arr1));
        System.out.println(System.currentTimeMillis() - start1 + "\n------------");

        long start2 = System.currentTimeMillis();
        int[] arr2 = new int[]{119, 146, 129, 129, 182, 206, 115, 79, 99, 28, 42, 85, 120, 73, 234, 165, 79, 202, 114, 28, 242, 147, 165, 104, 215, 243, 107, 18, 84, 66, 174, 165, 213, 226, 160, 71, 249, 119, 202, 24, 113, 169, 47, 232, 178, 104, 86, 114, 205, 165, 60, 91, 175, 17, 240, 184, 63, 155, 23, 79, 20, 5, 140, 12, 189, 243, 55, 235, 120, 174, 151, 159, 222, 11, 192, 83, 116, 33, 246, 237, 168, 56, 122, 184, 63, 103, 172, 119, 65, 101, 61, 147, 69, 146, 219, 84, 47, 1, 73, 5, 31, 134, 231, 245, 126, 157, 19, 11, 119, 232, 225, 139, 64, 52, 65, 69, 142, 233, 84, 157, 46, 15, 212, 149, 10, 79, 126, 237, 116, 67, 63, 170, 147, 140, 170, 34, 132, 81, 51, 159, 82, 150, 44, 111, 244, 229, 135, 115, 207, 162, 145, 136, 203, 16, 184, 132, 227, 158, 27, 197, 53, 125, 221, 98, 127, 67, 94, 228, 5, 38, 167, 132, 112, 206, 136, 156, 247, 67, 137, 96, 107, 37, 187, 66, 176, 226, 200, 157, 142, 214, 238, 240, 169, 53, 112, 114, 90, 195, 116, 84, 137, 125, 204, 75, 134, 92, 167, 136, 140, 191, 222, 5, 17, 80, 72, 51, 211, 221, 158, 112, 128, 171, 131, 104, 169, 140, 58, 30, 153, 159, 134, 243, 230, 36, 53, 217, 220, 157, 120, 10, 238, 61, 126, 197, 231, 226, 200, 230, 103, 207, 242, 122, 112, 213, 234, 132, 144, 185, 54, 156, 223, 216, 204, 246, 14, 80, 143, 130, 68, 143, 65, 4, 164, 237, 28, 96, 83, 12, 190, 114, 233, 32, 160, 195, 243, 203, 152, 73, 248, 233, 169, 150, 74, 208, 191, 75, 101, 66, 83, 26, 169, 125, 128, 62, 15, 90, 190, 74, 183, 224, 147, 198, 139, 31, 184, 227, 208, 181, 185, 150, 207, 90, 249, 124, 223, 58, 15, 102, 225, 207, 161, 115, 166, 142, 198, 7, 26, 244, 179, 126, 128, 119, 6, 164, 94, 245, 155, 186, 54, 26, 243, 2, 63, 33, 91, 36, 88, 181, 179, 213, 103, 156, 213, 152, 12, 110, 74, 201, 11, 161, 101, 72, 40, 121, 164, 143, 143, 218, 160, 36, 178, 224, 131, 37, 20, 238, 127, 125, 211, 65, 183, 105, 231, 240, 212, 153, 106, 169, 55, 172, 250, 100, 217, 227, 97, 198, 105, 235, 250, 184, 34, 187, 220, 151, 233, 25, 205, 12, 152, 245, 53, 45, 121, 181, 33, 22, 17, 80, 113, 229, 221, 165, 13, 15, 59, 212, 40, 177, 157, 169, 30, 170, 204, 190, 40, 171, 206, 227, 72, 98, 54, 164, 219, 92, 180, 105, 122, 140, 134, 234, 92, 175, 182, 159, 71, 218, 137, 34, 79, 72, 19, 45, 33, 17, 15, 103, 135, 231, 4, 2, 123, 161, 157, 211, 77, 189, 141, 221, 141, 66, 34, 121, 163, 235, 136, 241, 1, 53, 83, 19, 66, 156, 227, 236, 36, 213, 226, 190, 75, 47, 127, 153, 17, 122, 84, 167, 243, 181, 2, 245, 126, 16, 60, 109, 111, 170, 234, 153, 232, 96, 158, 181, 243, 149, 31, 129, 156, 24, 76, 70, 202, 245, 65, 44, 249, 56, 98, 58, 182, 7, 76, 192, 54, 227, 179, 112, 32, 144, 232, 178, 8, 85, 236, 64, 81, 225, 123, 112, 31, 76, 11, 42, 86, 149, 13, 182, 229, 238, 95, 5, 241, 35, 49, 132, 24, 224, 238, 228, 247, 244, 226, 22, 242, 232, 133, 100, 164, 225, 155, 132, 138, 71, 235, 97, 142, 168, 185, 160, 192, 184, 25, 96, 113, 91, 56, 225, 136, 29, 229, 9, 127, 26, 127, 2, 220, 120, 3, 133, 230, 80, 41, 128, 177, 176, 74, 119, 78, 78, 37, 155, 60, 186, 13, 116, 233, 140, 76, 167, 221, 23, 36, 143, 107, 106, 64, 25, 167, 214, 16, 203, 166, 74, 130, 200, 224, 246, 141, 115, 219, 156, 176, 150, 140, 148, 49, 17, 240, 233, 211, 98, 147, 110, 98, 179, 112, 35, 122, 245, 33, 155, 89, 14, 146, 156, 222, 11, 111, 99, 88, 83, 238, 190, 113, 14, 181, 247, 216, 216, 83, 209, 225, 31, 56, 163, 91, 195, 182, 210, 62, 56, 157, 10, 115, 38, 130, 185, 97, 151, 8, 117, 80, 77, 185, 225, 65, 181, 76, 192, 222, 152, 51, 65, 81, 93, 81, 137, 147, 233, 5, 126, 51, 173, 92, 103, 187, 239, 64, 72, 205, 2, 88, 134, 170, 39, 149, 125, 205, 155, 245, 123, 226, 52, 28, 131, 222, 18, 164, 22, 24, 209, 209, 22, 132, 132, 203, 187, 17, 168, 194, 48, 168, 23, 92, 179, 195, 104, 228, 230, 47, 205, 23, 101, 240, 140, 68, 149, 110, 189, 17, 147, 186, 46, 217, 130, 154, 244, 222, 54, 214, 98, 3, 68, 68, 217, 150, 17, 38, 41, 207, 194, 140, 10, 79, 44, 106, 109, 30, 102, 14, 127, 170, 170, 143, 189, 56, 96, 160, 10, 113, 83, 184, 130, 47, 32, 35, 151, 176, 192, 65, 206, 110, 60, 114, 158, 61, 120, 144, 59, 32, 172, 161, 44, 238, 149, 192, 195, 11, 38, 208, 12, 34, 240, 237, 68, 154, 2, 116, 162, 106, 232, 63, 155, 67, 52, 18, 38, 227, 105, 101, 244, 12, 45, 71, 205, 54, 57, 11, 18, 66, 37, 237, 39, 72, 45, 155, 16, 191, 225, 84, 91, 218, 62, 39, 4, 63, 33, 57, 42, 53, 139, 15, 124, 227, 53, 100, 159, 132, 156, 42, 71, 138, 132, 230, 126, 54, 69, 193, 231, 237, 56, 70, 127, 99, 81, 157, 62, 12, 12, 135, 188, 179, 169, 4, 36, 15, 118, 189, 8, 98, 244, 200, 33, 44, 168, 247, 84, 81, 8, 181, 164, 75, 137, 150, 36, 169, 100, 12, 115, 3, 222, 239, 168, 83, 188, 60, 210, 238, 217, 117, 64};
        sort(arr2);
        System.out.println(Arrays.toString(arr2));
        System.out.println(System.currentTimeMillis() - start2);
    }

    // Merge Sort
    public static void sort(int[] arr, int[] aux, int lo, int hi) {
        if (hi <= lo) return;
        int mid = lo + (hi - lo) / 2;
        sort(arr, aux, lo, mid);
        sort(arr, aux, mid + 1, hi);
        if (arr[mid + 1] >= arr[mid]) return;
        merge(arr, aux, lo, mid, hi);
    }

    // Bottom-Up Merge Sort
    public static void sort(int[] arr) {
        int size = arr.length;
        int[] aux = new int[size];
        for (int i = 1; i < size; i += i) {
            for (int lo = 0; lo < size - i; lo += i + i) {
                merge(arr, aux, lo, lo + i - 1, Math.min(lo + i + i - 1, size - 1));
            }
        }
    }

    private static void merge(int[] arr, int[] aux, int lo, int mid, int hi) {
        if (hi + 1 - lo >= 0) System.arraycopy(arr, lo, aux, lo, hi + 1 - lo);

        int i = lo, j = mid + 1;
        for (int k = lo; k <= hi; k++) {
            if (i > mid) arr[k] = aux[j++];
            else if (j > hi) arr[k] = aux[i++];
            else if (aux[j] < aux[i]) arr[k] = aux[j++];
            else arr[k] = aux[i++];
        }
    }
}
